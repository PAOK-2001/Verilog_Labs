vendor_name = ModelSim
source_file = 1, C:/Practicas/Verilog_Labs/ALU_CPU/ALU_CPU.v
source_file = 1, C:/Practicas/Verilog_Labs/ALU_CPU/ALU_CPU_tb.v
source_file = 1, C:/Practicas/Verilog_Labs/ALU_CPU/db/ALU_CPU.cbx.xml
design_name = ALU_CPU
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, ALU_CPU, 1
instance = comp, \state_out[0]~output , state_out[0]~output, ALU_CPU, 1
instance = comp, \state_out[1]~output , state_out[1]~output, ALU_CPU, 1
instance = comp, \state_out[2]~output , state_out[2]~output, ALU_CPU, 1
instance = comp, \next_state_out[0]~output , next_state_out[0]~output, ALU_CPU, 1
instance = comp, \next_state_out[1]~output , next_state_out[1]~output, ALU_CPU, 1
instance = comp, \next_state_out[2]~output , next_state_out[2]~output, ALU_CPU, 1
instance = comp, \clk_i~input , clk_i~input, ALU_CPU, 1
instance = comp, \clk_i~inputclkctrl , clk_i~inputclkctrl, ALU_CPU, 1
instance = comp, \IR[11]~input , IR[11]~input, ALU_CPU, 1
instance = comp, \IR[12]~input , IR[12]~input, ALU_CPU, 1
instance = comp, \IR[13]~input , IR[13]~input, ALU_CPU, 1
instance = comp, \IR[14]~input , IR[14]~input, ALU_CPU, 1
instance = comp, \always0~0 , always0~0, ALU_CPU, 1
instance = comp, \IR[17]~input , IR[17]~input, ALU_CPU, 1
instance = comp, \IR[16]~input , IR[16]~input, ALU_CPU, 1
instance = comp, \IR[15]~input , IR[15]~input, ALU_CPU, 1
instance = comp, \always0~1 , always0~1, ALU_CPU, 1
instance = comp, \inst_ack_i~input , inst_ack_i~input, ALU_CPU, 1
instance = comp, \int_en~input , int_en~input, ALU_CPU, 1
instance = comp, \int_req~input , int_req~input, ALU_CPU, 1
instance = comp, \next_state~4 , next_state~4, ALU_CPU, 1
instance = comp, \data_ack_i~input , data_ack_i~input, ALU_CPU, 1
instance = comp, \next_state~3 , next_state~3, ALU_CPU, 1
instance = comp, \Selector1~0 , Selector1~0, ALU_CPU, 1
instance = comp, \Selector1~1 , Selector1~1, ALU_CPU, 1
instance = comp, \rst_i~input , rst_i~input, ALU_CPU, 1
instance = comp, \rst_i~inputclkctrl , rst_i~inputclkctrl, ALU_CPU, 1
instance = comp, \state.mem_state , state.mem_state, ALU_CPU, 1
instance = comp, \Selector0~1 , Selector0~1, ALU_CPU, 1
instance = comp, \always0~2 , always0~2, ALU_CPU, 1
instance = comp, \next_state~2 , next_state~2, ALU_CPU, 1
instance = comp, \state_out~0 , state_out~0, ALU_CPU, 1
instance = comp, \Selector2~0 , Selector2~0, ALU_CPU, 1
instance = comp, \Selector2~1 , Selector2~1, ALU_CPU, 1
instance = comp, \state.write_back_state , state.write_back_state, ALU_CPU, 1
instance = comp, \Selector0~0 , Selector0~0, ALU_CPU, 1
instance = comp, \Selector0~2 , Selector0~2, ALU_CPU, 1
instance = comp, \state.fetch_state , state.fetch_state, ALU_CPU, 1
instance = comp, \Selector0~3 , Selector0~3, ALU_CPU, 1
instance = comp, \state.decode_state , state.decode_state, ALU_CPU, 1
instance = comp, \next_state.execute_state~0 , next_state.execute_state~0, ALU_CPU, 1
instance = comp, \state.execute_state , state.execute_state, ALU_CPU, 1
instance = comp, \WideOr1~0 , WideOr1~0, ALU_CPU, 1
instance = comp, \Selector3~0 , Selector3~0, ALU_CPU, 1
instance = comp, \Selector3~1 , Selector3~1, ALU_CPU, 1
instance = comp, \Selector3~2 , Selector3~2, ALU_CPU, 1
instance = comp, \state.int_state , state.int_state, ALU_CPU, 1
instance = comp, \state_out~1 , state_out~1, ALU_CPU, 1
instance = comp, \next_state_out~0 , next_state_out~0, ALU_CPU, 1
instance = comp, \next_state_out~1 , next_state_out~1, ALU_CPU, 1
instance = comp, \IR[0]~input , IR[0]~input, ALU_CPU, 1
instance = comp, \IR[1]~input , IR[1]~input, ALU_CPU, 1
instance = comp, \IR[2]~input , IR[2]~input, ALU_CPU, 1
instance = comp, \IR[3]~input , IR[3]~input, ALU_CPU, 1
instance = comp, \IR[4]~input , IR[4]~input, ALU_CPU, 1
instance = comp, \IR[5]~input , IR[5]~input, ALU_CPU, 1
instance = comp, \IR[6]~input , IR[6]~input, ALU_CPU, 1
instance = comp, \IR[7]~input , IR[7]~input, ALU_CPU, 1
instance = comp, \IR[8]~input , IR[8]~input, ALU_CPU, 1
instance = comp, \IR[9]~input , IR[9]~input, ALU_CPU, 1
instance = comp, \IR[10]~input , IR[10]~input, ALU_CPU, 1
instance = comp, \port_ack_i~input , port_ack_i~input, ALU_CPU, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, ALU_CPU, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, ALU_CPU, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, ALU_CPU, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
